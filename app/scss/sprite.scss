// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-top-name: 'arrow-top';
$arrow-top-x: 75px;
$arrow-top-y: 48px;
$arrow-top-offset-x: -75px;
$arrow-top-offset-y: -48px;
$arrow-top-width: 15px;
$arrow-top-height: 10px;
$arrow-top-total-width: 93px;
$arrow-top-total-height: 71px;
$arrow-top-image: '../images/sprite.png';
$arrow-top: (75px, 48px, -75px, -48px, 15px, 10px, 93px, 71px, '../images/sprite.png', 'arrow-top', );
$cart-name: 'cart';
$cart-x: 50px;
$cart-y: 25px;
$cart-offset-x: -50px;
$cart-offset-y: -25px;
$cart-width: 21px;
$cart-height: 21px;
$cart-total-width: 93px;
$cart-total-height: 71px;
$cart-image: '../images/sprite.png';
$cart: (50px, 25px, -50px, -25px, 21px, 21px, 93px, 71px, '../images/sprite.png', 'cart', );
$checkbox-checked-name: 'checkbox-checked';
$checkbox-checked-x: 41px;
$checkbox-checked-y: 50px;
$checkbox-checked-offset-x: -41px;
$checkbox-checked-offset-y: -50px;
$checkbox-checked-width: 20px;
$checkbox-checked-height: 20px;
$checkbox-checked-total-width: 93px;
$checkbox-checked-total-height: 71px;
$checkbox-checked-image: '../images/sprite.png';
$checkbox-checked: (41px, 50px, -41px, -50px, 20px, 20px, 93px, 71px, '../images/sprite.png', 'checkbox-checked', );
$checkbox-unchecked-name: 'checkbox-unchecked';
$checkbox-unchecked-x: 21px;
$checkbox-unchecked-y: 50px;
$checkbox-unchecked-offset-x: -21px;
$checkbox-unchecked-offset-y: -50px;
$checkbox-unchecked-width: 20px;
$checkbox-unchecked-height: 20px;
$checkbox-unchecked-total-width: 93px;
$checkbox-unchecked-total-height: 71px;
$checkbox-unchecked-image: '../images/sprite.png';
$checkbox-unchecked: (21px, 50px, -21px, -50px, 20px, 20px, 93px, 71px, '../images/sprite.png', 'checkbox-unchecked', );
$datepicker-name: 'datepicker';
$datepicker-x: 75px;
$datepicker-y: 33px;
$datepicker-offset-x: -75px;
$datepicker-offset-y: -33px;
$datepicker-width: 17px;
$datepicker-height: 15px;
$datepicker-total-width: 93px;
$datepicker-total-height: 71px;
$datepicker-image: '../images/sprite.png';
$datepicker: (75px, 33px, -75px, -33px, 17px, 15px, 93px, 71px, '../images/sprite.png', 'datepicker', );
$edit-name: 'edit';
$edit-x: 75px;
$edit-y: 18px;
$edit-offset-x: -75px;
$edit-offset-y: -18px;
$edit-width: 17px;
$edit-height: 15px;
$edit-total-width: 93px;
$edit-total-height: 71px;
$edit-image: '../images/sprite.png';
$edit: (75px, 18px, -75px, -18px, 17px, 15px, 93px, 71px, '../images/sprite.png', 'edit', );
$facebook-name: 'facebook';
$facebook-x: 0px;
$facebook-y: 0px;
$facebook-offset-x: 0px;
$facebook-offset-y: 0px;
$facebook-width: 25px;
$facebook-height: 25px;
$facebook-total-width: 93px;
$facebook-total-height: 71px;
$facebook-image: '../images/sprite.png';
$facebook: (0px, 0px, 0px, 0px, 25px, 25px, 93px, 71px, '../images/sprite.png', 'facebook', );
$instagram-name: 'instagram';
$instagram-x: 50px;
$instagram-y: 0px;
$instagram-offset-x: -50px;
$instagram-offset-y: 0px;
$instagram-width: 25px;
$instagram-height: 25px;
$instagram-total-width: 93px;
$instagram-total-height: 71px;
$instagram-image: '../images/sprite.png';
$instagram: (50px, 0px, -50px, 0px, 25px, 25px, 93px, 71px, '../images/sprite.png', 'instagram', );
$phone-name: 'phone';
$phone-x: 75px;
$phone-y: 0px;
$phone-offset-x: -75px;
$phone-offset-y: 0px;
$phone-width: 18px;
$phone-height: 18px;
$phone-total-width: 93px;
$phone-total-height: 71px;
$phone-image: '../images/sprite.png';
$phone: (75px, 0px, -75px, 0px, 18px, 18px, 93px, 71px, '../images/sprite.png', 'phone', );
$pinterest-name: 'pinterest';
$pinterest-x: 25px;
$pinterest-y: 25px;
$pinterest-offset-x: -25px;
$pinterest-offset-y: -25px;
$pinterest-width: 25px;
$pinterest-height: 25px;
$pinterest-total-width: 93px;
$pinterest-total-height: 71px;
$pinterest-image: '../images/sprite.png';
$pinterest: (25px, 25px, -25px, -25px, 25px, 25px, 93px, 71px, '../images/sprite.png', 'pinterest', );
$rss-name: 'rss';
$rss-x: 0px;
$rss-y: 25px;
$rss-offset-x: 0px;
$rss-offset-y: -25px;
$rss-width: 25px;
$rss-height: 25px;
$rss-total-width: 93px;
$rss-total-height: 71px;
$rss-image: '../images/sprite.png';
$rss: (0px, 25px, 0px, -25px, 25px, 25px, 93px, 71px, '../images/sprite.png', 'rss', );
$search-name: 'search';
$search-x: 0px;
$search-y: 50px;
$search-offset-x: 0px;
$search-offset-y: -50px;
$search-width: 21px;
$search-height: 21px;
$search-total-width: 93px;
$search-total-height: 71px;
$search-image: '../images/sprite.png';
$search: (0px, 50px, 0px, -50px, 21px, 21px, 93px, 71px, '../images/sprite.png', 'search', );
$twitter-name: 'twitter';
$twitter-x: 25px;
$twitter-y: 0px;
$twitter-offset-x: -25px;
$twitter-offset-y: 0px;
$twitter-width: 25px;
$twitter-height: 25px;
$twitter-total-width: 93px;
$twitter-total-height: 71px;
$twitter-image: '../images/sprite.png';
$twitter: (25px, 0px, -25px, 0px, 25px, 25px, 93px, 71px, '../images/sprite.png', 'twitter', );
$spritesheet-width: 93px;
$spritesheet-height: 71px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($arrow-top, $cart, $checkbox-checked, $checkbox-unchecked, $datepicker, $edit, $facebook, $instagram, $phone, $pinterest, $rss, $search, $twitter, );
$spritesheet: (93px, 71px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
